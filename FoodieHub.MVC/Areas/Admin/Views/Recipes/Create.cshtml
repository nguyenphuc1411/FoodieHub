@using FoodieHub.MVC.Models.Recipe
@using FoodieHub.MVC.Models.Categories
@using FoodieHub.MVC.Service.Interfaces
@inject IRecipeCategoryService categoryService
@inject IProductService productService
@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var categories = await categoryService.GetAll() ?? new List<GetRecipeCategoryDTO>();
    var products = await productService.GetAll() ?? new List<GetProductDTO>();
    List<string> units = new List<string>{
    "Gam (g)","Kilôgam (kg)","Lạng","Miligam (mg)","Mililit (ml)",
    "Lít (l)","Muỗng cà phê (tsp)","Muỗng canh (tbsp)","Chén (cốc)","Bát",
    "Quả","Củ","Miếng","Nắm","Bó","Thìa nhỏ","Thìa lớn","Tép","Gói","Lon"};
}
@model CreateRecipeDTO

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow">
                <form asp-action="Create" method="post" enctype="multipart/form-data" class="card-body">
                    <h2 class="card-title text-center mb-4">Add a New Recipe</h2>
                    <div class="py-1 text-center">
                        <img src="/images/horizontal-line1 1.png" alt="horizontal line">
                    </div>

                    <!-- Recipe Information -->
                    <div class="form-group">
                        <label asp-for="Title" class="font-weight-bold">Recipe Title</label>
                        <input asp-for="Title" class="form-control" placeholder="Enter the recipe title" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description" class="font-weight-bold">Description</label>
                        <textarea asp-for="Description" class="form-control" placeholder="Enter the recipe description"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="row">
                        <div class="form-group col-12 col-md-3">
                            <label asp-for="CookTime" class="font-weight-bold">Cook Time</label>
                            <input asp-for="CookTime" type="time" class="form-control" placeholder="Enter cook time" />
                            <span asp-validation-for="CookTime" class="text-danger"></span>
                        </div>

                        <div class="form-group col-12 col-md-3">
                            <label asp-for="Serves" class="font-weight-bold">Serves</label>
                            <input asp-for="Serves" class="form-control" placeholder="Enter number of servings" />
                            <span asp-validation-for="Serves" class="text-danger"></span>
                        </div>

                        <div class="form-group col-12 col-md-3">
                            <label asp-for="CategoryID" class="font-weight-bold">Category</label>
                            <select asp-for="CategoryID" asp-items="@(new SelectList(categories, "CategoryID", "CategoryName"))" class="form-control">
                                <option value="">Select Category</option>
                            </select>
                            <span asp-validation-for="CategoryID" class="text-danger"></span>
                        </div>
                        <div class="form-group col-12 col-md-3">
                            <label asp-for="IsActive" class="font-weight-bold">Status</label>
                            <select asp-for="IsActive" class="form-control">
                                @if (Model.IsActive)
                                {
                                    <option selected value="true">True</option>
                                    <option value="false">False</option>
                                }
                                else
                                {
                                    <option value="true">True</option>
                                    <option selected value="false">False</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row my-3">
                        <div class="form-group">
                            <label asp-for="File" class="font-weight-bold">Upload Image</label>
                            <input asp-for="File" type="file" class="form-control" accept="images/*" />
                        </div>
                    </div>

                    <!-- Ingredients -->
                    <h4 class="mb-3">Ingredients</h4>
                    <table class="table" id="ingredientsTable">
                        <thead>
                            <tr>
                                <th style="width: 50%;" class="text-center">Ingredient</th>
                                <th style="width: 20%;" class="text-center">Quantity</th>
                                <th style="width: 20%;" class="text-center">Unit</th>
                                <th style="width: 10%;" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if(Model?.RecipeSteps?.Count() > 0){
                                for (var i = 0; i < Model.Ingredients.Count; i++)
                                {
                                    <tr>
                                        <td style="width: 50%;">
                                            <input asp-for="Ingredients[@i].Name" class="form-control" placeholder="Ingredient name" />
                                            <span asp-validation-for="Ingredients[@i].Name" class="text-danger"></span>
                                        </td>
                                        <td style="width: 20%;">
                                            <input asp-for="Ingredients[@i].Quantity" class="form-control" placeholder="Quantity" />
                                            <span asp-validation-for="Ingredients[@i].Quantity" class="text-danger"></span>
                                        </td>
                                        <td style="width: 20%;">
                                            <select asp-for="Ingredients[@i].Unit" asp-items="@(new SelectList(units))" class="form-control">
                                                <option value="">Select Unit</option>
                                            </select>
                                        </td>
                                        <td style="width: 10%;">
                                            <button type="button" class="btn btn-danger" onclick="removeIngredient(this)">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }                          
                        </tbody>
                    </table>
                    <button type="button" class="btn btn-primary" onclick="addIngredient()">Add Ingredient</button>


                    <!-- Recipe Steps -->
                    <h4 class="mb-3">Recipe Steps</h4>
                    <table class="table" id="stepsTable">
                        <thead>
                            <tr>
                                <th style="width: 10%;" class="text-center">Step Number</th>
                                <th style="width: 60%;" class="text-center">Directions</th>
                                <th style="width: 20%;" class="text-center">Step Image</th>
                                <th style="width: 10%;" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if(Model?.RecipeSteps?.Count()>0){
                                for (var i = 0; i < Model.RecipeSteps.Count; i++)
                                {
                                    <tr>
                                        <td style="width: 10%;">
                                            <input asp-for="RecipeSteps[@i].Step" class="form-control" />
                                            <span asp-validation-for="RecipeSteps[@i].Step" class="text-danger"></span>
                                        </td>
                                        <td style="width: 60%;">
                                            <textarea asp-for="RecipeSteps[@i].Directions" class="form-control"></textarea>
                                            <span asp-validation-for="RecipeSteps[@i].Directions" class="text-danger"></span>
                                        </td>
                                        <td style="width: 20%;">
                                            <div class="d-flex">
                                                <input asp-for="RecipeSteps[@i].ImageStep" type="file" class="form-control" />
                                            </div>
                                        </td>
                                        <td style="width: 10%;">
                                            <button type="button" class="btn btn-danger" onclick="removeStep(this)">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }
                            
                        </tbody>
                    </table>
                    <button type="button" class="btn btn-primary" onclick="addStep()">Add Step</button>

                    <hr />                
                    <!-- Action Buttons -->
                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-primary me-2" name="IsActive" value="true">PUBLISH</button>
                        <button type="submit" class="btn btn-light me-2" name="IsActive" value="false">SAVE AS DRAFT</button>
                        <a href="/admin/recipes" class="btn btn-secondary">CANCEL</a>
                    </div>
                </form>            
            </div>
        </div>
    </div>
</div>
<a asp-action="Index" class="btn btn-secondary">Back to List</a>


@section Scripts {
    <script>
        // Add Step
        document.getElementById("add-step").addEventListener("click", function () {
            const stepsSection = document.getElementById("steps-section");

            // Get current step count for index
            const stepIndex = stepsSection.childElementCount;

            // Create container for step
            const stepDiv = document.createElement("div");
            stepDiv.className = "step-item mb-3";
            stepDiv.dataset.index = stepIndex;

            // Step Title
            const stepTitle = document.createElement("h5");
            stepTitle.className = "mb-2";
            stepTitle.innerText = `Step ${stepIndex + 1}`;

            // Step (hidden input)
            const stepInput = document.createElement("input");
            stepInput.type = "hidden";
            stepInput.name = `RecipeSteps[${stepIndex}].Step`;
            stepInput.value = stepIndex + 1; // Step number

            // Directions Textarea
            const directionsInput = document.createElement("textarea");
            directionsInput.name = `RecipeSteps[${stepIndex}].Directions`;
            directionsInput.className = "form-control mb-2";
            directionsInput.placeholder = "Describe this step";
            directionsInput.required = true;

            // ImageStep File Input
            const imageInput = document.createElement("input");
            imageInput.type = "file";
            imageInput.name = `RecipeSteps[${stepIndex}].ImageStep`;
            imageInput.className = "form-control mb-2";

            // Delete Button for Step
            const deleteButton = document.createElement("button");
            deleteButton.type = "button";
            deleteButton.className = "btn btn-danger";
            deleteButton.innerText = "Delete";

            // Delete Step Event
            deleteButton.addEventListener("click", function () {
                stepsSection.removeChild(stepDiv);

                // Update indices and titles after deletion
                Array.from(stepsSection.children).forEach((child, newIndex) => {
                    child.dataset.index = newIndex;
                    child.querySelector("h5").innerText = `Step ${newIndex + 1}`;
                    child.querySelector(`[name^="RecipeSteps"]`).name = `RecipeSteps[${newIndex}].Step`;
                    child.querySelector(`[name$=".Directions"]`).name = `RecipeSteps[${newIndex}].Directions`;
                    child.querySelector(`[name$=".ImageStep"]`).name = `RecipeSteps[${newIndex}].ImageStep`;
                });
            });

            // Append new step elements to container
            stepDiv.appendChild(stepTitle);
            stepDiv.appendChild(stepInput);
            stepDiv.appendChild(directionsInput);
            stepDiv.appendChild(imageInput);
            stepDiv.appendChild(deleteButton);

            // Append step container to steps section
            stepsSection.appendChild(stepDiv);
        });

        const products = [
        @foreach (var item in products)
        {
            @: { id: '@item.ProductID', name: '@item.ProductName' },
        }
        ];

        // Fetch available units for the dropdown
        const availableUnits = ["cái", "kg", "g", "thìa", "ml", "lít", "tấn", "mét", "chén", "muỗng", "hũ"];

        document.getElementById("add-ingredient").addEventListener("click", function () {
            const ingredientsSection = document.getElementById("ingredients-section");

            // Get current ingredient count for index
            const ingredientIndex = ingredientsSection.childElementCount;

            // Create container for ingredient
            const ingredientDiv = document.createElement("div");
            ingredientDiv.className = "ingredient-item mb-3";
            ingredientDiv.dataset.index = ingredientIndex;

            // Ingredient Name Input
            const nameInput = document.createElement("input");
            nameInput.type = "text";
            nameInput.name = `Ingredients[${ingredientIndex}].Name`;
            nameInput.className = "form-control mb-2";
            nameInput.placeholder = "Enter ingredient name";
            nameInput.required = true;

            // Ingredient Quantity Input
            const quantityInput = document.createElement("input");
            quantityInput.type = "number";
            quantityInput.name = `Ingredients[${ingredientIndex}].Quantity`;
            quantityInput.className = "form-control form-control-sm mb-2";
            quantityInput.placeholder = "Quantity";
            quantityInput.required = true;
            quantityInput.min = 0;

            // Ingredient Unit Select
            const unitSelect = document.createElement("select");
            unitSelect.name = `Ingredients[${ingredientIndex}].Unit`;
            unitSelect.className = "form-select form-select-sm mb-2";
            unitSelect.required = true;

            // Add available units to the dropdown
            availableUnits.forEach(unit => {
                const option = document.createElement("option");
                option.value = unit;
                option.text = unit;
                unitSelect.appendChild(option);
            });

            // Ingredient Product Select
            const productSelect = document.createElement("select");
            productSelect.name = `Ingredients[${ingredientIndex}].ProductID`;
            productSelect.className = "form-select-sm mb-2";

            // Add default option
            const defaultOption = document.createElement("option");
            defaultOption.value = "";
            defaultOption.text = "Select Product";
            productSelect.appendChild(defaultOption);

            // Add product options to the dropdown
            products.forEach(product => {
                const option = document.createElement("option");
                option.value = product.id;
                option.text = product.name;
                productSelect.appendChild(option);
            });

            // Delete Button for Ingredient
            const deleteButton = document.createElement("button");
            deleteButton.type = "button";
            deleteButton.className = "btn btn-danger";
            deleteButton.innerText = "Delete";

            // Delete Ingredient Event
            deleteButton.addEventListener("click", function () {
                ingredientsSection.removeChild(ingredientDiv);
            });

            // Append new ingredient elements to container
            ingredientDiv.appendChild(nameInput);
            ingredientDiv.appendChild(quantityInput);
            ingredientDiv.appendChild(unitSelect);
            ingredientDiv.appendChild(productSelect);
            ingredientDiv.appendChild(deleteButton);

            // Append ingredient container to ingredients section
            ingredientsSection.appendChild(ingredientDiv);
        });

    </script>
}
