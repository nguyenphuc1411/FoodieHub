@using FoodieHub.MVC.Models.QueryModel
@using FoodieHub.MVC.Models.Recipe
@using FoodieHub.MVC.Models.Response
@inject IConfiguration config
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var url = config["BaseHost"];
    var query = ViewBag.Query as QueryRecipeModel ?? new QueryRecipeModel(); 
}
@model PaginatedModel<GetRecipeDTO>
<div class="container py-5">
    <h2 class="text-center mb-5">Recipe List</h2>

    <!-- Filter and Search Options -->
    <div class="row g-3 mb-4">
        <div class="col-12 col-md-3">
            <form class="filter-container">
                <!-- Search Bar -->
                <div class="mb-3">
                    <div class="input-group">
                        <input name="SearchItem" value=@query.SearchItem type="text" class="form-control" placeholder="Search recipes..." aria-label="Search recipes">
                    </div>
                </div>

                <!-- Filter by Ingredient -->
                <div class="mb-3">
                    <input type="text" class="form-control" placeholder="Filter by ingredients">
                </div>
                <!-- Filter by Time -->
                <div class="mb-3">
                    <select name="CookOption" class="form-select">
                        <option value="">Filter by Time</option>

                        @if (query.CookOption == 1)
                        {
                            <option value="1" selected>Under 30 mins</option>
                        }
                        else
                        {
                            <option value="1">Under 30 mins</option>
                        }

                        @if (query.CookOption == 2)
                        {
                            <option value="2" selected>30 - 60 mins</option>
                        }
                        else
                        {
                            <option value="2">30 - 60 mins</option>
                        }

                        @if (query.CookOption == 3)
                        {
                            <option value="3" selected>Over 60 mins</option>
                        }
                        else
                        {
                            <option value="3">Over 60 mins</option>
                        }
                    </select>
                </div>

                <!-- Filter by Upload Type -->
                <div class="mb-3">
                    <select name="IsAdminUpload" class="form-select">
                        <option value="">Uploaded by</option>

                        @if (query.IsAdminUpload == true)
                        {
                            <option value="TRUE" selected>Admin</option>
                        }
                        else
                        {
                            <option value="TRUE">Admin</option>
                        }

                        @if (query.IsAdminUpload == false)
                        {
                            <option value="FALSE" selected>User</option>
                        }
                        else
                        {
                            <option value="FALSE">User</option>
                        }
                    </select>

                </div>

                <!-- Sort by Dropdown -->
                <div class="mb-3">
                    <select name="SortBy" class="form-select">
                        @if (query.SortBy == "CreatedAt")
                        {
                            <option value="CreatedAt" selected>Sort by Date</option>
                        }
                        else
                        {
                            <option value="CreatedAt">Sort by Date</option>
                        }

                        @if (query.SortBy == "TotalFavorites")
                        {
                            <option value="TotalFavorites" selected>Sort by Likes</option>
                        }
                        else
                        {
                            <option value="TotalFavorites">Sort by Likes</option>
                        }

                        @if (query.SortBy == "RatingAverage")
                        {
                            <option value="RatingAverage" selected>Sort by Rating</option>
                        }
                        else
                        {
                            <option value="RatingAverage">Sort by Rating</option>
                        }
                    </select>

                </div>

                <!-- Apply Filters Button -->
                <div class="d-grid gap-2">
                    <button class="button button-dark">Apply Filters</button>
                </div>

                <!-- Clear Filters Button -->
                <div class="d-grid gap-2 mt-2">
                    <a href="/recipes" class="button button-light">Clear Filters</a>
                </div>
            </form>
        </div>

        <!-- Recipe Cards -->
        <div class="col-12 col-md-9">
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach (var recipe in Model.Items)
                {
                    <a href="recipes/detail/@recipe.RecipeID">
                        <div class="col">
                            <div class="card recipe-card shadow-sm">
                                <img src=@(url+"images/"+recipe.ImageURL) class="card-img-top" alt="Recipe Image">
                                <div class="card-body">
                                    <h5 class="card-title">@recipe.Title</h5>
                                    <p class="card-text">@recipe.Description</p>
                                    <div class="recipe-stats">
                                        <span>Created on: @recipe.CreatedAt</span>
                                        <span>Likes: @recipe.TotalFavorites</span>
                                    </div>
                                    <div class="recipe-stats">
                                        <span>Rating: @recipe.RatingAverage/5 (@recipe.TotalRatings)</span>
                                        <span>Comments: @recipe.TotalComments</span>
                                    </div>
                                    <div class="recipe-stats">
                                        <span>Cooking Time: @recipe.CookTime</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                   
                }
            </div>

            <nav aria-label="Page navigation example">
                <ul class="pagination pagination-sm mb-0">
                    <!-- Nút Previous (ẩn nếu đang ở trang đầu tiên) -->
                    <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                        <a class="page-link" asp-route-pageSize="@Model.PageSize" asp-route-currentPage="@(Model.Page - 1)">Previous</a>
                    </li>

                    <!-- Tạo danh sách các trang -->
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Page ? "active" : "")">
                            <a class="page-link" asp-route-pageSize="@Model.PageSize" asp-route-currentPage="@i">@i</a>
                        </li>
                    }

                    <!-- Nút Next (ẩn nếu đang ở trang cuối) -->
                    <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-route-pageSize="@Model.PageSize" asp-route-currentPage="@(Model.Page + 1)">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

    <!-- More Recipe Cards can be added here -->
</div>

<div class="py-5 text-center">
    <h1 style="font-family: Inter; font-size: 35px; font-style: italic; font-weight: 500; line-height: 42px;">
        Meet Our Residents
    </h1>
</div>

<div class="text-center">
    <p class="nho">
        The ultimate dream team—our residents will share everything you’ve ever wanted to know about dinner-wrangling, dessert-whispering, and more.
    </p>
</div>

<div class="container text-center">
    <div class="row gy-4 justify-content-center">
        <div class="col-lg-2 col-md-6 col-sm-12 d-flex justify-content-center align-items-center">
            <div class="infocard text-center">
                <div class="d-flex justify-content-center">
                    <img src="/images/profile.jpg" alt="Profile Image" class="img-fluid rounded-circle profile-img">
                </div>
                <div class="info-box">
                    <p class="username">Tên người dùng</p>
                    <p class="view-profile">VIEW PROFILE &gt;&gt;</p>
                </div>
            </div>
        </div>

        <div class="py-5">
            <button class="button button-light">View More</button>
        </div>
    </div>
</div>

<div class="ngancach"></div>

<div class="recipe-section text-center p-3">
    <h2>Add a New Recipe</h2>
    <p>Contribute your best original recipes to the FoodieHub cooking community's all-star collection.</p>
    <a href="/recipes/create" class="button button-dark">CREATE A RECIPE</a>
</div>

<style>
    body {
        background-color: #f8f9fa;
    }

    .recipe-card {
        border: 1px solid #ddd;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .recipe-card img {
            width: 100%;
            height: 250px;
            object-fit: cover;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

        .recipe-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        }

        .recipe-card .card-body {
            padding: 20px;
        }

        .recipe-card .card-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
        }

        .recipe-card .card-text {
            font-size: 0.95rem;
            color: #555;
        }

    .recipe-stats {
        display: flex;
        justify-content: space-between;
        font-size: 14px;
        color: #777;
        margin-top: 10px;
    }
</style>
